{
  // Visit https://aka.ms/tsconfig to read more about this file
  "compilerOptions": {
    /* [1] File Layout（檔案輸入輸出設定）*/
    // "rootDir": "./src", // TypeScript 編譯的 來源根目錄。若註解掉，會自動推斷。
    "outDir": "./dist", // 編譯後輸出的資料夾。TypeScript 會把 .ts、tsx轉成.js 放進去

    /* [2] Environment Settings（環境設定）*/
    // See also https://aka.ms/tsconfig/module
    "module": "nodenext", // 針對 Node.js ESM 模組系統（ES Modules），支援 .js / .ts 的自動解析。
    "target": "esnext", // 編譯輸出保留最新的 JavaScript 語法（如 ??、?.、BigInt 等）。不做語法降級。
    "types": [],
    // For nodejs:
    // "lib": ["esnext"], // 告訴編譯器要包含哪個標準庫 API（像是 Promise、Map 等）。
    // "types": ["node"], // 指定引入的全域型別，例如 Node.js。
    // and npm install -D @types/node

    /* [3] Other Outputs （其他輸出選項） */
    "sourceMap": true, // 生成對應的 .map 檔案，方便在瀏覽器或 VSCode 調試 TypeScript 原始碼。
    "declaration": true, // 生成 .d.ts 型別定義檔，供其他專案引用。
    "declarationMap": true, // 生成 .d.ts.map，方便 debug .d.ts 文件。

    /* [4] Stricter Typechecking Options（嚴格型別檢查） */
    "noUncheckedIndexedAccess": true, // 對物件或陣列索引存取更嚴格。
    "exactOptionalPropertyTypes": true, // 可選屬性只接受 undefined，不會被其他值誤用。

    // Style Options
    // "noImplicitReturns": true,
    // "noImplicitOverride": true,
    // "noUnusedLocals": true,
    // "noUnusedParameters": true,
    // "noFallthroughCasesInSwitch": true,
    // "noPropertyAccessFromIndexSignature": true,

    // Recommended Options
    "strict": true,
    "jsx": "react-jsx",
    "verbatimModuleSyntax": true,
    "isolatedModules": true,
    "noUncheckedSideEffectImports": true,
    "moduleDetection": "force",
    "skipLibCheck": true,
  }
}
